create database data_digger;
use data_digger;


#first table
create table customers_table (CustomerID int primary key, Name varchar(50), Email Varchar(100), Address Varchar(100));
insert into customers_table values(1, 'Pooja Suthar', 'poojasuthar12@gmail.com', 'B-12, abc, punagam, surat'),
(2, 'Payal Prajapat', 'payalpraja90@gmail.com', 'E-55, xyz, punagam, surat'),
(3, 'Koshal Sisodiya', 'koshalsiso17@gmail.com', 'B-901, byz, godadara, surat'),
(4, 'Komal Suthar', 'komalshree45@gmail.com', 'C-16, abc, varacha, surat'),
(5, 'Heena Suthar', 'heenashree34@gmail.com', 'G-06, cyz, Kapodara, surat'),
(6, 'Alice', 'alice34@gmail.com','3 street new york city');
select * from customers_table;
update customers_table
set Address='A-204, shree, punagam, surat'
Where CustomerID=1;
select * from customers_table where Name ='Alice';
delete from customers_table 
where CustomerID=6;


#second table
Create table order_table(OrderID int primary key, CustomerID int, OrderDate datetime, TotalAmount int, foreign key(CustomerID) references customers_table(CustomerID));
insert into order_table values(1001, 1, '2025-01-26', 25000),
(1002, 2, '2025-05-04', 75000),
(1003, 3, '2024-06-13', 50000),
(1004, 4, '2021-11-24', 96000),
(1005, 5, '2019-07-18', 52000),
(1006, 6, '2024-08-19', 45000);
select * from order_table;
select * from order_table where CustomerID=3;
update order_table
set TotalAmount = 50000
where OrderID= 1001;
delete from order_table
where OrderID=1006;
select * from order_table 
where OrderDate >= NOW() - INTERVAL 30 DAY;
select MAX(TotalAmount) from order_table;
select MIN(TotalAmount) from order_table;
select AVG(TotalAmount) from order_table;

# third table
create table products_table(ProductID int Primary key, ProductName varchar(50), Price int, Stock enum('in stock','out of stock'));
insert into products_table values(1, 'Keyboard', 1200, 'in stock'),
(2, 'Mouse', 800, 'in stock'),
(3, 'Monitor', 10500, 'in stock'),
(4, 'Mobile Phone', 50000, 'in stock'),
(5, 'Charger', 500, 'out of stock');
select * from products_table order by price desc;
update products_table 
set price=12000
where ProductID = 3;
delete from products_table
where Stock='out of stock';
select * from products_table where price between 500 and 2000;
select ProductName from products_table where Price=(SELECT MAX(Price) from products_table);
select ProductName from products_table where Price=(SELECT MIN(Price) from products_table);

#fourth table
create table OrderDetails(OrderDetailsID int primary key, OrderID int, ProductID int, Quantity int, SubTotal int, foreign key(OrderID) references order_table(OrderID), foreign key(ProductID) references products_table(ProductID));
insert into OrderDetails values
(101, 1, 1, 10, 12000),
(102, 2, 2, 10, 8000),
(103, 3, 3, 1, 10500),
(104, 4, 4, 3, 150000),
(105, 5, 5, 3, 1500);
select * from OrderDetails where OrderDetailsID = 101;
select 
	p.ProductID,
	p.ProductName,
	SUM(od.Quantity) AS TotalOrdered
from
	OrderDetails od
join
	products_table p on od.ProductID = p.ProductID
group by
	p.ProductID, p.ProductName
order by
	TotalOrdered desc
limit 3;